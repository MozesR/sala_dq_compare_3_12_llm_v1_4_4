async function getJSON(url){const r=await fetch(url,{cache:'no-store'});if(!r.ok)throw new Error('HTTP '+r.status);return await r.json();}
async function postRaw(url, body){const r=await fetch(url,{method:'POST',body});if(!r.ok)throw new Error('HTTP '+r.status);return await r.json();}
async function loadRules(){const box=document.getElementById('rules');const status=document.getElementById('status');try{const j=await getJSON('/api/rules?t='+Date.now());box.value=JSON.stringify(j,null,2);status.textContent='Loaded ✔';}catch(e){box.value='';status.textContent='Failed to load rules: '+e.message;status.style.color='#fca5a5';}}
async function saveRules(){const box=document.getElementById('rules');const status=document.getElementById('status');try{const obj=JSON.parse(box.value);const resp=await postRaw('/api/save_rules',JSON.stringify(obj));status.textContent=resp.ok?'Saved ✔':('Save failed: '+(resp.error||'unknown'));status.style.color=resp.ok?'':'#fca5a5';}catch(e){status.textContent='Invalid JSON: '+e.message;status.style.color='#fca5a5';}}
function renderSuggestionsTable(list){const tb=document.querySelector('#sugTbl tbody');tb.innerHTML='';if(!Array.isArray(list)||list.length===0){tb.innerHTML='<tr><td colspan="5">No suggestions.</td></tr>';return;}list.forEach(s=>{const tr=document.createElement('tr');const rule=s.rule?JSON.stringify(s.rule):'{}';tr.innerHTML=`<td>${s.title||''}</td><td>${s.reason||''}</td><td><code>${rule}</code></td><td>${s.confidence??''}</td><td><button data-id="${s.id||''}" class="applyBtn">Apply</button></td>`;tb.appendChild(tr);});tb.querySelectorAll('.applyBtn').forEach(btn=>{btn.addEventListener('click',async(e)=>{const id=e.target.getAttribute('data-id');try{const r=await fetch('/api/llm/apply',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({id})});const j=await r.json();if(!r.ok||j.ok===false){alert('Apply failed: '+(j.error||'unknown'));}else{alert('Rule applied.'+(j.skipped?' ('+j.skipped+')':''));}await loadRules();await loadSuggestions();if(document.getElementById('toggleInsights').checked){await loadInsightPanel();}}catch(err){alert('Apply error: '+err.message);}});});}
async function loadSuggestions(){const list=await getJSON('/api/llm/suggestions?t='+Date.now());renderSuggestionsTable(list);}
function suggestionCard(s){const conf=(s.confidence!=null)?`confidence ${s.confidence}`:'';const src=s.source?`• ${s.source}`:'';return `<div class="sug" style="border-top:1px solid #1f2733;padding:8px 0"><div class="meta" style="display:flex;gap:8px;align-items:center;font-size:12px;color:#94a3b8">${conf} ${src}</div><div><strong>${s.title||''}</strong></div><div style="margin:6px 0">${s.reason||''}</div><div><code>${JSON.stringify(s.rule||{})}</code></div></div>`;}
async function loadInsightPanel(){const panel=document.getElementById('insightPanel');const body=document.getElementById('insightBody');try{const list=await getJSON('/api/llm/suggestions?t='+Date.now());const top=(Array.isArray(list)?list.slice(0,3):[]);if(top.length===0){body.innerHTML='No suggestions yet.';}else{body.innerHTML=top.map(suggestionCard).join('');}}catch(e){body.innerHTML='Failed to load suggestions: '+e.message;}}
document.addEventListener('DOMContentLoaded',()=>{document.getElementById('save').addEventListener('click',saveRules);document.getElementById('toggleInsights').addEventListener('change',async(e)=>{const panel=document.getElementById('insightPanel');if(e.target.checked){panel.style.display='block';await loadInsightPanel();}else{panel.style.display='none';}});loadRules();loadSuggestions();});
